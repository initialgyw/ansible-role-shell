---
# load the variables in hierachical order
- name: Load default vars
  ansible.builtin.include_vars:
    file: default.yml

# - name: load os specific vars
#   ansible.builtin.include_vars:
#     file: "{{ ansible_system | lower }}.yaml"

# variables checking
- name: Verify shell type
  ansible.builtin.fail:
    msg: "{{ shell_type }} is not supported"
  when: shell_type not in ['bash', 'zsh']
  check_mode: false

- name: Verify shell theme
  ansible.builtin.fail:
    msg: "{{ shell_theme }} is not supported. Supported themes are {{ supported_zsh_themes }}"
  when:
    - shell_theme
    - shell_type == 'zsh'
    - shell_theme not in supported_zsh_themes
  check_mode: false

- name: Verify shell installation
  block:
    - name: Check shell binary path
      ansible.builtin.stat:
        path: "{{ shell_binary }}"
      register: check_shell_binary

    - name: Fail if shell binary does not exist
      ansible.builtin.fail:
        msg: "{{ shell_binary }} does not exists"
      when: not check_shell_binary.stat.exists

- name: Set user shell
  become: true
  ansible.builtin.user:
    name: "{{ ansible_user_id }}"
    shell: "{{ shell_binary }}"

- name: Create the necessary directories in user home
  ansible.builtin.file:
    mode: "0755"
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ ansible_env.HOME }}/bin"
    - "{{ ansible_env.HOME }}/tmp"
    - "{{ ansible_env.HOME }}/.{{ shell_type }}"

- name: Configure shell
  ansible.builtin.include_tasks: "{{ shell_type }}/configure.yml"

# set paths
- name: Set shell extra paths
  ansible.builtin.set_fact:
    shell_extra_paths: "{{ shell_extra_paths + [ansible_env.HOME + '/bin'] }}"
  when: ansible_env.HOME + '/bin' not in shell_extra_paths

- name: Update shell user settings
  ansible.builtin.debug:
    msg: "setting user shell configs"
  notify: Set shell user settings
  changed_when: true

- name: Configure fzf
  ansible.builtin.include_tasks: fzf.yml
  when: enable_fzf

- name: Configure tmux
  ansible.builtin.include_tasks: tmux.yml
  when: enable_tmux