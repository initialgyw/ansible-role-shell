name: Github Actions - ansible-role-shell

on:
  pull_request:
    branches:
      - 'main'
  push:
    tags:
      - '*.*.*'

jobs:
  lint:
    name: Lint Ansible Role
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install ansible-lint
        run: pip install ansible ansible-lint

      - name: Run ansible-lint
        run: ansible-lint .

  publish:
    name: Publish to Ansible Galaxy
    needs: lint
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Ansible and Ansible Galaxy CLI
        run: pip install ansible

      - name: Import role to Ansible Galaxy
        env:
          ANSIBLE_GALAXY_TOKEN: ${{ secrets.ANSIBLE_GALAXY_TOKEN }}
        run: |
          ansible-galaxy role import \
            --api-key "$ANSIBLE_GALAXY_TOKEN" \
            ${{ github.repository_owner }} \
            $(basename ${{ github.repository }})

  tag:
    name: Tag release
    if: >-
      github.event.pull_request.merged == true &&
      startsWith(github.head_ref, 'v') &&
      github.base_ref == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Extract version from branch name
        id: extract_version
        run: |
          VERSION=$(echo "${GITHUB_HEAD_REF}" | sed -E 's/^v([0-9]+\.[0-9]+\.[0-9]+)$/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create and push tag
        if: steps.extract_version.outputs.version != ''
        run: |
          git tag "${{ steps.extract_version.outputs.version }}"
          git push origin "${{ steps.extract_version.outputs.version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
